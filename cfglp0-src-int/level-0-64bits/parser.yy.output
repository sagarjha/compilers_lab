
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_name #0001 procedure_body
2: #0001 ->  <empty>
3: program ->  procedure_name #0002 procedure_body
4: #0002 ->  <empty>
5: procedure_name (NAME) ->  NAME '(' ')'
6: procedure_body ('{') ->  '{' declaration_statement_list #0003 basic_block_list '}'
7: #0003 ->  <empty>
8: procedure_body ('{') ->  '{' basic_block_list '}'
9: declaration_statement_list ->  declaration_statement
10: declaration_statement_list ->  declaration_statement_list declaration_statement
11: declaration_statement (INTEGER) ->  INTEGER NAME ';'
12: basic_block_list ->  basic_block_list basic_block
13: basic_block_list ->  basic_block
14: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list
15: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list conditional_statement
16: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list goto_statement
17: executable_statement_list ->  assignment_statement_list
18: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
19: assignment_statement_list ->  <empty>
20: assignment_statement_list ->  assignment_statement_list assignment_statement
21: assignment_statement ('=') ->  variable '=' variable ';'
22: assignment_statement ('=') ->  variable '=' constant ';'
23: assignment_statement ('=') ->  variable '=' predicate ';'
24: variable (NAME) ->  NAME
25: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
26: conditional_statement (IF) ->  IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';'
27: goto_statement (GOTO) ->  GOTO '<' NAME INTEGER_NUMBER '>' ';'
28: modified_variable ->  variable
29: modified_variable ->  constant
30: predicate ('=') ->  predicate '=' modified_variable
31: predicate ('<') ->  predicate '<' '=' modified_variable
32: predicate ('>') ->  predicate '>' '=' modified_variable
33: predicate ('<') ->  predicate '<' modified_variable
34: predicate ('>') ->  predicate '>' modified_variable
35: predicate ('!') ->  predicate '!' '=' modified_variable
36: predicate ('=') ->  predicate '=' '=' modified_variable
37: predicate ('=') ->  modified_variable '=' modified_variable
38: predicate ('<') ->  modified_variable '<' '=' modified_variable
39: predicate ('>') ->  modified_variable '>' '=' modified_variable
40: predicate ('<') ->  modified_variable '<' modified_variable
41: predicate ('>') ->  modified_variable '>' modified_variable
42: predicate ('!') ->  modified_variable '!' '=' modified_variable
43: predicate ('=') ->  modified_variable '=' '=' modified_variable
44: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: NAME
   259: RETURN
   260: INTEGER
   261: IF
   262: ELSE
   263: GOTO
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    60: '<'
    62: '>'
    58: ':'
    61: '='
    33: '!'


Grammar States: 
State 0:
44: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_name to state 3
  3:   On declaration_statement to state 4
  4:   On NAME to state 5
  5:   On INTEGER to state 6


State 1:
44: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_name #0001 procedure_body 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_name to state 7
  1:   On declaration_statement to state 8
  2:   On NAME to state 5
  3:   On INTEGER to state 6


State 3:
3: program -> procedure_name  . #0002 procedure_body 
  0:   On #0002 to state 9
  Reduce by 4: #0002 ->  . 


State 4:
9: declaration_statement_list -> declaration_statement  . 
  Reduce by 9: declaration_statement_list -> declaration_statement  . 


State 5:
5: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 10


State 6:
11: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 11


State 7:
1: program -> declaration_statement_list procedure_name  . #0001 procedure_body 
  0:   On #0001 to state 12
  Reduce by 2: #0001 ->  . 


State 8:
10: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 10: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 9:
3: program -> procedure_name #0002  . procedure_body 
  0:   On procedure_body to state 13
  1:   On '{' to state 14


State 10:
5: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 15


State 11:
11: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 16


State 12:
1: program -> declaration_statement_list procedure_name #0001  . procedure_body 
  0:   On procedure_body to state 17
  1:   On '{' to state 14


State 13:
3: program -> procedure_name #0002 procedure_body  . 
  Reduce by 3: program -> procedure_name #0002 procedure_body  . 


State 14:
6: procedure_body -> '{'  . declaration_statement_list #0003 basic_block_list '}' 
8: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 18
  1:   On basic_block_list to state 19
  2:   On declaration_statement to state 4
  3:   On basic_block to state 20
  4:   On INTEGER to state 6
  5:   On '<' to state 21


State 15:
5: procedure_name -> NAME '(' ')'  . 
  Reduce by 5: procedure_name -> NAME '(' ')'  . 


State 16:
11: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 11: declaration_statement -> INTEGER NAME ';'  . 


State 17:
1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 
  Reduce by 1: program -> declaration_statement_list procedure_name #0001 procedure_body  . 


State 18:
6: procedure_body -> '{' declaration_statement_list  . #0003 basic_block_list '}' 
10: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On #0003 to state 22
  1:   On declaration_statement to state 8
  2:   On INTEGER to state 6
  Reduce by 7: #0003 ->  . 


State 19:
8: procedure_body -> '{' basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 23
  1:   On basic_block to state 24
  2:   On '<' to state 21


State 20:
13: basic_block_list -> basic_block  . 
  Reduce by 13: basic_block_list -> basic_block  . 


State 21:
14: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' executable_statement_list 
15: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' executable_statement_list conditional_statement 
16: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' executable_statement_list goto_statement 
  0:   On NAME to state 25


State 22:
6: procedure_body -> '{' declaration_statement_list #0003  . basic_block_list '}' 
  0:   On basic_block_list to state 26
  1:   On basic_block to state 20
  2:   On '<' to state 21


State 23:
8: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 8: procedure_body -> '{' basic_block_list '}'  . 


State 24:
12: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 12: basic_block_list -> basic_block_list basic_block  . 


State 25:
14: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' executable_statement_list 
15: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' executable_statement_list conditional_statement 
16: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' executable_statement_list goto_statement 
  0:   On INTEGER_NUMBER to state 27


State 26:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list  . '}' 
12: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 28
  1:   On basic_block to state 24
  2:   On '<' to state 21


State 27:
14: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' executable_statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' executable_statement_list conditional_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' executable_statement_list goto_statement 
  0:   On '>' to state 29


State 28:
6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 
  Reduce by 6: procedure_body -> '{' declaration_statement_list #0003 basic_block_list '}'  . 


State 29:
14: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' executable_statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' executable_statement_list conditional_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' executable_statement_list goto_statement 
  0:   On ':' to state 30


State 30:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . executable_statement_list 
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . executable_statement_list conditional_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . executable_statement_list goto_statement 
  0:   On executable_statement_list to state 31
  1:   On assignment_statement_list to state 32
  Reduce by 19: assignment_statement_list ->  . 


State 31:
14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . conditional_statement 
16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . goto_statement 
  0:   On conditional_statement to state 33
  1:   On goto_statement to state 34
  2:   On IF to state 35
  3:   On GOTO to state 36
  Reduce by 14: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 


State 32:
17: executable_statement_list -> assignment_statement_list  . 
18: executable_statement_list -> assignment_statement_list  . RETURN ';' 
20: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 37
  1:   On assignment_statement to state 38
  2:   On variable to state 39
  3:   On NAME to state 40
  Reduce by 17: executable_statement_list -> assignment_statement_list  . 


State 33:
15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list conditional_statement  . 
  Reduce by 15: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list conditional_statement  . 


State 34:
16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list goto_statement  . 
  Reduce by 16: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list goto_statement  . 


State 35:
26: conditional_statement -> IF  . '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '(' to state 41


State 36:
27: goto_statement -> GOTO  . '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 42


State 37:
18: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 43


State 38:
20: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 20: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 39:
21: assignment_statement -> variable  . '=' variable ';' 
22: assignment_statement -> variable  . '=' constant ';' 
23: assignment_statement -> variable  . '=' predicate ';' 
  0:   On '=' to state 44


State 40:
24: variable -> NAME  . 
  Reduce by 24: variable -> NAME  . 


State 41:
26: conditional_statement -> IF '('  . predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On predicate to state 45
  1:   On modified_variable to state 46
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 42:
27: goto_statement -> GOTO '<'  . NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 50


State 43:
18: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 18: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 44:
21: assignment_statement -> variable '='  . variable ';' 
22: assignment_statement -> variable '='  . constant ';' 
23: assignment_statement -> variable '='  . predicate ';' 
  0:   On variable to state 51
  1:   On constant to state 52
  2:   On predicate to state 53
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49
  5:   On modified_variable to state 46


State 45:
26: conditional_statement -> IF '(' predicate  . ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
30: predicate -> predicate  . '=' modified_variable 
31: predicate -> predicate  . '<' '=' modified_variable 
32: predicate -> predicate  . '>' '=' modified_variable 
33: predicate -> predicate  . '<' modified_variable 
34: predicate -> predicate  . '>' modified_variable 
35: predicate -> predicate  . '!' '=' modified_variable 
36: predicate -> predicate  . '=' '=' modified_variable 
  0:   On ')' to state 54
  1:   On '=' to state 55
  2:   On '<' to state 56
  3:   On '>' to state 57
  4:   On '!' to state 58


State 46:
37: predicate -> modified_variable  . '=' modified_variable 
38: predicate -> modified_variable  . '<' '=' modified_variable 
39: predicate -> modified_variable  . '>' '=' modified_variable 
40: predicate -> modified_variable  . '<' modified_variable 
41: predicate -> modified_variable  . '>' modified_variable 
42: predicate -> modified_variable  . '!' '=' modified_variable 
43: predicate -> modified_variable  . '=' '=' modified_variable 
  0:   On '=' to state 59
  1:   On '<' to state 60
  2:   On '>' to state 61
  3:   On '!' to state 62


State 47:
28: modified_variable -> variable  . 
  Reduce by 28: modified_variable -> variable  . 


State 48:
29: modified_variable -> constant  . 
  Reduce by 29: modified_variable -> constant  . 


State 49:
25: constant -> INTEGER_NUMBER  . 
  Reduce by 25: constant -> INTEGER_NUMBER  . 


State 50:
27: goto_statement -> GOTO '<' NAME  . INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 63


State 51:
21: assignment_statement -> variable '=' variable  . ';' 
28: modified_variable -> variable  . 
  0:   On ';' to state 64
  Reduce by 28: modified_variable -> variable  . 


State 52:
22: assignment_statement -> variable '=' constant  . ';' 
29: modified_variable -> constant  . 
  0:   On ';' to state 65
  Reduce by 29: modified_variable -> constant  . 


State 53:
23: assignment_statement -> variable '=' predicate  . ';' 
30: predicate -> predicate  . '=' modified_variable 
31: predicate -> predicate  . '<' '=' modified_variable 
32: predicate -> predicate  . '>' '=' modified_variable 
33: predicate -> predicate  . '<' modified_variable 
34: predicate -> predicate  . '>' modified_variable 
35: predicate -> predicate  . '!' '=' modified_variable 
36: predicate -> predicate  . '=' '=' modified_variable 
  0:   On ';' to state 66
  1:   On '=' to state 55
  2:   On '<' to state 56
  3:   On '>' to state 57
  4:   On '!' to state 58


State 54:
26: conditional_statement -> IF '(' predicate ')'  . GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On GOTO to state 67


State 55:
30: predicate -> predicate '='  . modified_variable 
36: predicate -> predicate '='  . '=' modified_variable 
  0:   On modified_variable to state 68
  1:   On '=' to state 69
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 56:
31: predicate -> predicate '<'  . '=' modified_variable 
33: predicate -> predicate '<'  . modified_variable 
  0:   On '=' to state 70
  1:   On modified_variable to state 71
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 57:
32: predicate -> predicate '>'  . '=' modified_variable 
34: predicate -> predicate '>'  . modified_variable 
  0:   On '=' to state 72
  1:   On modified_variable to state 73
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 58:
35: predicate -> predicate '!'  . '=' modified_variable 
  0:   On '=' to state 74


State 59:
37: predicate -> modified_variable '='  . modified_variable 
43: predicate -> modified_variable '='  . '=' modified_variable 
  0:   On modified_variable to state 75
  1:   On '=' to state 76
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 60:
38: predicate -> modified_variable '<'  . '=' modified_variable 
40: predicate -> modified_variable '<'  . modified_variable 
  0:   On '=' to state 77
  1:   On modified_variable to state 78
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 61:
39: predicate -> modified_variable '>'  . '=' modified_variable 
41: predicate -> modified_variable '>'  . modified_variable 
  0:   On '=' to state 79
  1:   On modified_variable to state 80
  2:   On variable to state 47
  3:   On constant to state 48
  4:   On NAME to state 40
  5:   On INTEGER_NUMBER to state 49


State 62:
42: predicate -> modified_variable '!'  . '=' modified_variable 
  0:   On '=' to state 81


State 63:
27: goto_statement -> GOTO '<' NAME INTEGER_NUMBER  . '>' ';' 
  0:   On '>' to state 82


State 64:
21: assignment_statement -> variable '=' variable ';'  . 
  Reduce by 21: assignment_statement -> variable '=' variable ';'  . 


State 65:
22: assignment_statement -> variable '=' constant ';'  . 
  Reduce by 22: assignment_statement -> variable '=' constant ';'  . 


State 66:
23: assignment_statement -> variable '=' predicate ';'  . 
  Reduce by 23: assignment_statement -> variable '=' predicate ';'  . 


State 67:
26: conditional_statement -> IF '(' predicate ')' GOTO  . '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 83


State 68:
30: predicate -> predicate '=' modified_variable  . 
  Reduce by 30: predicate -> predicate '=' modified_variable  . 


State 69:
36: predicate -> predicate '=' '='  . modified_variable 
  0:   On modified_variable to state 84
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 70:
31: predicate -> predicate '<' '='  . modified_variable 
  0:   On modified_variable to state 85
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 71:
33: predicate -> predicate '<' modified_variable  . 
  Reduce by 33: predicate -> predicate '<' modified_variable  . 


State 72:
32: predicate -> predicate '>' '='  . modified_variable 
  0:   On modified_variable to state 86
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 73:
34: predicate -> predicate '>' modified_variable  . 
  Reduce by 34: predicate -> predicate '>' modified_variable  . 


State 74:
35: predicate -> predicate '!' '='  . modified_variable 
  0:   On modified_variable to state 87
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 75:
37: predicate -> modified_variable '=' modified_variable  . 
  Reduce by 37: predicate -> modified_variable '=' modified_variable  . 


State 76:
43: predicate -> modified_variable '=' '='  . modified_variable 
  0:   On modified_variable to state 88
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 77:
38: predicate -> modified_variable '<' '='  . modified_variable 
  0:   On modified_variable to state 89
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 78:
40: predicate -> modified_variable '<' modified_variable  . 
  Reduce by 40: predicate -> modified_variable '<' modified_variable  . 


State 79:
39: predicate -> modified_variable '>' '='  . modified_variable 
  0:   On modified_variable to state 90
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 80:
41: predicate -> modified_variable '>' modified_variable  . 
  Reduce by 41: predicate -> modified_variable '>' modified_variable  . 


State 81:
42: predicate -> modified_variable '!' '='  . modified_variable 
  0:   On modified_variable to state 91
  1:   On variable to state 47
  2:   On constant to state 48
  3:   On NAME to state 40
  4:   On INTEGER_NUMBER to state 49


State 82:
27: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>'  . ';' 
  0:   On ';' to state 92


State 83:
26: conditional_statement -> IF '(' predicate ')' GOTO '<'  . NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 93


State 84:
36: predicate -> predicate '=' '=' modified_variable  . 
  Reduce by 36: predicate -> predicate '=' '=' modified_variable  . 


State 85:
31: predicate -> predicate '<' '=' modified_variable  . 
  Reduce by 31: predicate -> predicate '<' '=' modified_variable  . 


State 86:
32: predicate -> predicate '>' '=' modified_variable  . 
  Reduce by 32: predicate -> predicate '>' '=' modified_variable  . 


State 87:
35: predicate -> predicate '!' '=' modified_variable  . 
  Reduce by 35: predicate -> predicate '!' '=' modified_variable  . 


State 88:
43: predicate -> modified_variable '=' '=' modified_variable  . 
  Reduce by 43: predicate -> modified_variable '=' '=' modified_variable  . 


State 89:
38: predicate -> modified_variable '<' '=' modified_variable  . 
  Reduce by 38: predicate -> modified_variable '<' '=' modified_variable  . 


State 90:
39: predicate -> modified_variable '>' '=' modified_variable  . 
  Reduce by 39: predicate -> modified_variable '>' '=' modified_variable  . 


State 91:
42: predicate -> modified_variable '!' '=' modified_variable  . 
  Reduce by 42: predicate -> modified_variable '!' '=' modified_variable  . 


State 92:
27: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 
  Reduce by 27: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 


State 93:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME  . INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 94


State 94:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER  . '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '>' to state 95


State 95:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>'  . ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On ';' to state 96


State 96:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';'  . ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On ELSE to state 97


State 97:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE  . GOTO '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On GOTO to state 98


State 98:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO  . '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 99


State 99:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<'  . NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 100


State 100:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME  . INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 101


State 101:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER  . '>' ';' 
  0:   On '>' to state 102


State 102:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>'  . ';' 
  0:   On ';' to state 103


State 103:
26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 
  Reduce by 26: conditional_statement -> IF '(' predicate ')' GOTO '<' NAME INTEGER_NUMBER '>' ';' ELSE GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 



